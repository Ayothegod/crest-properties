// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  fullname  String?
  email     String    @unique
  password  String
  sessions  Session[]
  otp       Otp?
  profile   Profile?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Session {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  expiresAt DateTime
  userId    String   @db.ObjectId
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Otp {
  id                  String    @id @default(auto()) @map("_id") @db.ObjectId
  otp                 String    @unique
  scheduledDeletionAt DateTime?
  userId              String    @unique @db.ObjectId
  user                User      @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Profile {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  bio         String
  phoneNumber String?
  properties  Property[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  userId      String     @unique @db.ObjectId
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Property {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  description  String
  price        Float
  location     String
  propertyType PropertyType // HOUSE, APARTMENT, CONDO, STUDIO
  features     String[] // "Pool", "Garage"
  availableFor AvailableFor // RENT, SALE
  agentId      String   @db.ObjectId
  agent        Profile  @relation(fields: [agentId], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

enum PropertyType {
  HOUSE
  APARTMENT
  CONDO
  STUDIO
}

enum AvailableFor {
  RENT
  SALE
}